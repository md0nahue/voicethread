<div class="container mx-auto px-4 py-8">
  <div class="max-w-4xl mx-auto">
    <div class="bg-white rounded-lg shadow-lg overflow-hidden">
      <!-- Header -->
      <div class="p-6 border-b">
        <div class="flex justify-between items-start">
          <div>
            <h1 class="text-3xl font-bold mb-2"><%= @interview_session.topic.body %></h1>
            <div class="flex items-center space-x-4 text-sm text-gray-600">
              <span class="flex items-center">
                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <%= format_duration(@interview_session.total_duration) %>
              </span>
              <span class="flex items-center">
                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                </svg>
                <%= @interview_session.created_at.strftime("%B %d, %Y") %>
              </span>
            </div>
          </div>
          <span class="px-3 py-1 rounded-full text-sm <%= @interview_session.completed? ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800' %>">
            <%= @interview_session.status.titleize %>
          </span>
        </div>
      </div>

      <!-- Audio Player -->
      <div class="p-6 border-b">
        <div class="bg-gray-50 rounded-lg p-4">
          <div id="waveform" class="mb-4"></div>
          <div class="flex items-center justify-between">
            <div class="flex items-center space-x-4">
              <button id="play-pause" class="p-2 rounded-full bg-blue-600 text-white hover:bg-blue-700">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
              </button>
              <span id="current-time" class="text-sm text-gray-600">0:00</span>
              <span class="text-sm text-gray-400">/</span>
              <span id="duration" class="text-sm text-gray-600"><%= format_duration(@interview_session.total_duration) %></span>
            </div>
            <div class="flex items-center space-x-2">
              <button id="speed-control" class="px-3 py-1 text-sm border rounded hover:bg-gray-100">1x</button>
            </div>
          </div>
        </div>
      </div>

      <!-- Transcript Tabs -->
      <div class="p-6">
        <div class="border-b mb-4">
          <nav class="-mb-px flex space-x-8">
            <button class="tab-button active border-b-2 border-blue-500 py-4 px-1 text-sm font-medium text-blue-600" data-tab="polished">
              Polished Transcript
            </button>
            <button class="tab-button border-b-2 border-transparent py-4 px-1 text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300" data-tab="raw">
              Raw Transcript
            </button>
          </nav>
        </div>

        <div class="tab-content">
          <div id="polished-content" class="prose max-w-none">
            <%= markdown(@interview_session.polished_transcription) %>
          </div>
          <div id="raw-content" class="hidden">
            <pre class="bg-gray-50 p-4 rounded-lg overflow-x-auto"><%= @interview_session.raw_transcript %></pre>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<% content_for :javascript do %>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Initialize WaveSurfer
      const wavesurfer = WaveSurfer.create({
        container: '#waveform',
        waveColor: '#CBD5E0',
        progressColor: '#3182CE',
        cursorColor: '#2D3748',
        barWidth: 2,
        barRadius: 3,
        cursorWidth: 1,
        height: 100,
        barGap: 3
      });

      // Load audio file
      wavesurfer.load('<%= @interview_session.final_audio_url %>');

      // Play/Pause button
      const playPauseBtn = document.getElementById('play-pause');
      playPauseBtn.addEventListener('click', () => {
        wavesurfer.playPause();
        playPauseBtn.innerHTML = wavesurfer.isPlaying() ? 
          '<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>' :
          '<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>';
      });

      // Update time display
      const currentTimeEl = document.getElementById('current-time');
      const durationEl = document.getElementById('duration');
      
      wavesurfer.on('ready', () => {
        durationEl.textContent = formatTime(wavesurfer.getDuration());
      });

      wavesurfer.on('audioprocess', () => {
        currentTimeEl.textContent = formatTime(wavesurfer.getCurrentTime());
      });

      // Tab switching
      const tabButtons = document.querySelectorAll('.tab-button');
      const polishedContent = document.getElementById('polished-content');
      const rawContent = document.getElementById('raw-content');

      tabButtons.forEach(button => {
        button.addEventListener('click', () => {
          tabButtons.forEach(btn => {
            btn.classList.remove('border-blue-500', 'text-blue-600');
            btn.classList.add('border-transparent', 'text-gray-500');
          });
          button.classList.remove('border-transparent', 'text-gray-500');
          button.classList.add('border-blue-500', 'text-blue-600');

          if (button.dataset.tab === 'polished') {
            polishedContent.classList.remove('hidden');
            rawContent.classList.add('hidden');
          } else {
            polishedContent.classList.add('hidden');
            rawContent.classList.remove('hidden');
          }
        });
      });

      // Helper function to format time
      function formatTime(seconds) {
        const minutes = Math.floor(seconds / 60);
        const remainingSeconds = Math.floor(seconds % 60);
        return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;
      }
    });
  </script>
<% end %> 